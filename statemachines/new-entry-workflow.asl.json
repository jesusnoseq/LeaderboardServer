{
  "Comment": "A description of my state machine",
  "StartAt": "New entry",
  "States": {
    "New entry": {
      "Type": "Pass",
      "Next": "ValidateEntry"
    },
    "ValidateEntry": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Require manual approval?"
    },
    "Require manual approval?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$state.isSuspicious",
          "BooleanEquals": true,
          "Next": "SendEmail"
        }
      ],
      "Default": "Save score"
    },
    "SendEmail": {
      "Type": "Task",
      "Next": "Wait for manual approval",
      "Parameters": {
        "Content": {}
      },
      "Resource": "arn:aws:states:::aws-sdk:sesv2:sendEmail.waitForTaskToken"
    },
    "Wait for manual approval": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "WaitForManualApproval",
        "Payload.$": "$"
      },
      "TimeoutSeconds": 84600,
      "Next": "Choice",
      "Catch": [
        {
          "ErrorEquals": [
            "States.Timeout"
          ],
          "Next": "Write entry in DLQ",
          "Comment": "Manual approval timeout"
        }
      ]
    },
    "Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$state.isManuallyApproved",
          "BooleanEquals": true,
          "Next": "Save score"
        }
      ],
      "Default": "Write entry in DLQ"
    },
    "Write entry in DLQ": {
      "Type": "Task",
      "Parameters": {
        "Body": {},
        "Bucket": "MyData",
        "Key": "MyData"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
      "Next": "Success"
    },
    "Save score": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Success"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}